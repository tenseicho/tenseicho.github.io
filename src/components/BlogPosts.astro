---
const posts = await Astro.glob('../pages/blog/*.md');
posts.sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime())
    .slice(0, 4); // Show only the latest 4 blog posts on the main page
---

<section class="blog-posts">
    <div class="header">
        <h2>Blog Posts</h2>
        <div class="tag-stack">
            <code>software</code>
            <code>cybersecurity</code>
            <code>guides</code>
            <code>tools</code>
        </div>
    </div>
    <div class="posts-grid">
        {posts.map(post => {
            const slug = post.file ? post.file.split('/').pop()?.replace('.md', '') : '';
            const url = post.url ?? `/blog/${slug}`;
            return (
                <a href={url} class="post-link">
                    <article class="post-card">
                        <h3>{post.frontmatter.title}</h3>
                        <p>{post.frontmatter.description}</p>
                        <div class="post-meta">
                            <div class="tags">
                                {post.frontmatter.tags.map((tag: string) => (
                                    <span class="tag">{tag}</span>
                                ))}
                            </div>
                            <time datetime={post.frontmatter.date}>
                                {post.frontmatter.date}
                            </time>
                        </div>
                    </article>
                </a>
            );
        })}
    </div>
    <div class="view-all">
        <a href="/blog" class="view-all-link">View All Posts â†’</a>
    </div>
</section>

<style>
    .blog-posts {
        margin-bottom: 4rem;
    }

    .header {
        margin-bottom: 1.5rem;
    }

    h2 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }

    .tag-stack {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .tag-stack code {
        font-family: monospace;
        color: var(--text-secondary);
        font-size: 0.9rem;
    }

    .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
    }

    .post-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .post-card {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 1.5rem;
        height: 100%;
        transition: transform 0.2s ease;
    }

    .post-card:hover {
        transform: translateY(-2px);
    }

    h3 {
        font-size: 1.1rem;
        font-weight: 500;
        margin: 0 0 1rem;
    }

    p {
        color: var(--text-secondary);
        font-size: 0.9rem;
        margin: 0 0 1rem;
    }

    .post-meta {
        display: flex;
        justify-content: space-between;
        align-items: center;
        font-size: 0.8rem;
    }

    .tags {
        display: flex;
        gap: 0.5rem;
        flex-wrap: wrap;
    }

    .tag {
        background: var(--background);
        padding: 0.25rem 0.5rem;
        border-radius: 0.25rem;
        color: var(--text-secondary);
    }

    time {
        color: var(--text-secondary);
    }

    .view-all {
        margin-top: 2rem;
        text-align: center;
    }

    .view-all-link {
        display: inline-flex;
        align-items: center;
        color: var(--text-primary);
        text-decoration: none;
        font-size: 0.9rem;
        transition: color 0.2s ease;
    }

    .view-all-link:hover {
        color: var(--accent);
    }

    @media (max-width: 768px) {
        .posts-grid {
            grid-template-columns: 1fr;
        }
    }
</style> 