---
const projects = await Astro.glob('../pages/software/*.md');
projects.sort((a, b) => {
    const statusOrder = { completed: 1, "in-progress": 2, planned: 3 } as const;
    type Status = keyof typeof statusOrder;
    return statusOrder[a.frontmatter.status as Status] - statusOrder[b.frontmatter.status as Status];
}).slice(0, 4); // Show only the first 4 projects on the main page
---

<section class="projects">
    <div class="header">
        <h2>Software Projects</h2>
        <div class="tech-stack">
            <code>Dart</code>
            <code>Golang</code>
            <code>JavaScript</code>
        </div>
    </div>
    <div class="project-grid">
        {projects.map(project => {
            const slug = project.file ? project.file.split('/').pop()?.replace('.md', '') : '';
            const url = project.url ?? `/software/${slug}`;
            return (
                <a href={url} class="project-link">
                    <div class="project-card">
                        <div class="project-header">
                            <span class={`status-indicator ${project.frontmatter.status}`}></span>
                            <h3>{project.frontmatter.title}</h3>
                        </div>
                        <div class="project-info">
                            <p>{project.frontmatter.description}</p>
                            <div class="tech-info">
                                Tech: {project.frontmatter.tech}
                            </div>
                        </div>
                    </div>
                </a>
            );
        })}
    </div>
    <div class="view-all">
        <a href="/software" class="view-all-link">View All Projects â†’</a>
    </div>
</section>

<style>
    .projects {
        margin-bottom: 4rem;
    }

    .header {
        margin-bottom: 1.5rem;
    }

    h2 {
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
    }

    .tech-stack {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .tech-stack code {
        font-family: monospace;
        color: var(--text-secondary);
        font-size: 0.9rem;
    }

    .project-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 1rem;
    }

    .project-link {
        text-decoration: none;
        color: inherit;
        display: block;
    }

    .project-card {
        background: var(--card-bg);
        border: 1px solid var(--border-color);
        border-radius: 0.5rem;
        padding: 1.5rem;
        height: 100%;
        transition: transform 0.2s ease;
    }

    .project-card:hover {
        transform: translateY(-2px);
    }

    .project-header {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1rem;
    }

    .project-header h3 {
        font-size: 1.1rem;
        font-weight: 500;
        margin: 0;
    }

    .status-indicator {
        width: 8px;
        height: 8px;
        border-radius: 50%;
    }

    .status-indicator.completed {
        background: #22c55e;
    }

    .status-indicator.in-progress {
        background: #eab308;
    }

    .status-indicator.planned {
        background: #3b82f6;
    }

    .project-info {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .project-info p {
        color: var(--text-secondary);
        font-size: 0.9rem;
        margin: 0;
    }

    .tech-info {
        color: var(--text-secondary);
        font-size: 0.9rem;
    }

    .view-all {
        margin-top: 2rem;
        text-align: center;
    }

    .view-all-link {
        display: inline-flex;
        align-items: center;
        color: var(--text-primary);
        text-decoration: none;
        font-size: 0.9rem;
        transition: color 0.2s ease;
    }

    .view-all-link:hover {
        color: var(--accent);
    }

    @media (max-width: 768px) {
        .project-grid {
            grid-template-columns: 1fr;
        }
    }
</style> 